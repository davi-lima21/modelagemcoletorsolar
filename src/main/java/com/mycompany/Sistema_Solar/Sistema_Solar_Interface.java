
package com.mycompany.Sistema_Solar;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

/**
 * Classe que representa a interface gráfica do sistema solar. 
 * Ela gerencia a interação do usuário e a atualização automática das temperaturas do coletor solar.
 * Utiliza um gráfico para exibir a evolução das temperaturas ao longo do tempo.
 */
public class Sistema_Solar_Interface extends javax.swing.JFrame {

    private Timer timer;
    double temperatura_ambiente = TemperaturaAmbiente.chamarTemperaturaAmbiente();
    double vazao = 0.05; // Vazão do fluido
    double t = 0; // Contador de tempo para o gráfico
    private Coletor_solar coletor;
    GraficoTemperatura grafico = new GraficoTemperatura();
    double temperatura_entrada = temperatura_ambiente;

    /**
     * Construtor da interface do sistema solar. 
     * Inicializa os componentes gráficos e o gráfico de temperatura.
     * Também configura o slider de hora do dia para atualizar a hora exibida na interface.
     */
    public Sistema_Solar_Interface() {
        initComponents();

        // Cria e exibe o gráfico de temperatura
        grafico.criarGrafico();

        // Adiciona um ouvinte para o slider de hora do dia
        hora_dia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                // Atualiza o valor exibido quando o slider mudar
                int hora = hora_dia.getValue();
                valor_hora_dia.setText(String.valueOf(hora));
            }
        });

        // Inicia a atualização automática das temperaturas
        iniciarAtualizacaoAutomatica();
        // Atualiza as temperaturas ao iniciar
        atualizarTemperaturaSaida();
    }

    /**
     * Inicia a atualização automática das temperaturas do coletor solar a cada intervalo de tempo.
     * Utiliza um Timer para agendar a execução periódica da atualização.
     */
    private void iniciarAtualizacaoAutomatica() {
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                // Atualiza a temperatura de saída automaticamente
                atualizarTemperaturaSaida();
            }
        }, 0, 1500); // Atualização a cada 1500 ms (1.5 segundos)
    }

    /**
     * Para a atualização automática das temperaturas, cancelando o timer.
     */
    private void pararAtualizacaoAutomatica() {
        if (timer != null) {
            timer.cancel();
        }
    }


    // M
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dia_tipo = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        button_diminuir_vazaoin = new javax.swing.JToggleButton();
        button_aumentar_vazaoin = new javax.swing.JToggleButton();
        button_diminuir_temperatura_ambiente = new javax.swing.JToggleButton();
        button_aumentar_temperatura_ambiente = new javax.swing.JToggleButton();
        valor_hora_dia = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        hora_dia = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        label_vazao = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1500, 2147483647));
        setName("tela1"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 544));

        button_diminuir_vazaoin.setText("Diminuir Vazão de entrada");
        button_diminuir_vazaoin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        button_diminuir_vazaoin.setFocusPainted(false);
        button_diminuir_vazaoin.setFocusable(false);
        button_diminuir_vazaoin.setMargin(new java.awt.Insets(5, 14, 3, 14));
        button_diminuir_vazaoin.setMaximumSize(new java.awt.Dimension(300, 40));
        button_diminuir_vazaoin.setMinimumSize(new java.awt.Dimension(240, 25));
        button_diminuir_vazaoin.setPreferredSize(new java.awt.Dimension(260, 35));
        button_diminuir_vazaoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_diminuir_vazaoinActionPerformed(evt);
            }
        });

        button_aumentar_vazaoin.setText("Aumentar Vazão de entrada");
        button_aumentar_vazaoin.setAlignmentY(0.6F);
        button_aumentar_vazaoin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        button_aumentar_vazaoin.setFocusPainted(false);
        button_aumentar_vazaoin.setFocusable(false);
        button_aumentar_vazaoin.setMargin(new java.awt.Insets(5, 14, 3, 14));
        button_aumentar_vazaoin.setMaximumSize(new java.awt.Dimension(300, 40));
        button_aumentar_vazaoin.setMinimumSize(new java.awt.Dimension(240, 25));
        button_aumentar_vazaoin.setPreferredSize(new java.awt.Dimension(260, 35));
        button_aumentar_vazaoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_aumentar_vazaoinActionPerformed(evt);
            }
        });

        button_diminuir_temperatura_ambiente.setText("Diminuir Temperatura Ambiente");
        button_diminuir_temperatura_ambiente.setAlignmentY(0.6F);
        button_diminuir_temperatura_ambiente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        button_diminuir_temperatura_ambiente.setFocusPainted(false);
        button_diminuir_temperatura_ambiente.setFocusable(false);
        button_diminuir_temperatura_ambiente.setMargin(new java.awt.Insets(5, 14, 3, 14));
        button_diminuir_temperatura_ambiente.setMaximumSize(new java.awt.Dimension(300, 40));
        button_diminuir_temperatura_ambiente.setMinimumSize(new java.awt.Dimension(240, 25));
        button_diminuir_temperatura_ambiente.setPreferredSize(new java.awt.Dimension(260, 35));
        button_diminuir_temperatura_ambiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_diminuir_temperatura_ambienteActionPerformed(evt);
            }
        });

        button_aumentar_temperatura_ambiente.setText("Aumentar Temperatura Ambiente");
        button_aumentar_temperatura_ambiente.setAlignmentY(0.6F);
        button_aumentar_temperatura_ambiente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        button_aumentar_temperatura_ambiente.setFocusPainted(false);
        button_aumentar_temperatura_ambiente.setFocusable(false);
        button_aumentar_temperatura_ambiente.setMargin(new java.awt.Insets(5, 14, 3, 14));
        button_aumentar_temperatura_ambiente.setMaximumSize(new java.awt.Dimension(300, 40));
        button_aumentar_temperatura_ambiente.setMinimumSize(new java.awt.Dimension(240, 25));
        button_aumentar_temperatura_ambiente.setPreferredSize(new java.awt.Dimension(260, 35));
        button_aumentar_temperatura_ambiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_aumentar_temperatura_ambienteActionPerformed(evt);
            }
        });

        jPanel1.setAlignmentY(0.6F);

        hora_dia.setMajorTickSpacing(6);
        hora_dia.setMaximum(24);
        hora_dia.setMinorTickSpacing(3);
        hora_dia.setPaintTicks(true);
        hora_dia.setSnapToTicks(true);
        hora_dia.setToolTipText("");
        hora_dia.setValue(13);

        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Davil\\OneDrive\\Documentos\\UFSC\\Projeto_coletor\\modelo_coletor_solar\\src\\main\\java\\com\\mycompany\\Sistema_Solar\\relogiosol.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hora_dia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(hora_dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Modelo de entradas e saídas do coletor solar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Vazao:");

        label_vazao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_vazao.setText("5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button_diminuir_vazaoin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_aumentar_vazaoin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_aumentar_temperatura_ambiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_diminuir_temperatura_ambiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(valor_hora_dia))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_vazao, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(240, 240, 240)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(button_diminuir_vazaoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addComponent(button_aumentar_vazaoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(label_vazao, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(button_diminuir_temperatura_ambiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_aumentar_temperatura_ambiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valor_hora_dia))))
                .addGap(0, 28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/**
 * Atualiza a temperatura de saída do coletor solar com base nos parâmetros atuais.
 * Inclui o cálculo da temperatura de entrada com um ruído aleatório para simulação.
 * Atualiza também o gráfico com os novos valores de temperatura.
 */
private void atualizarTemperaturaSaida() {
    if (coletor == null) {
        coletor = new Coletor_solar(0, 0, 0);
    }
    // Cria uma nova instância do coletor solar com os parâmetros atualizados
    Coletor_solar novoColetor = new Coletor_solar(coletor.getIrradiacao(
            hora_dia.getValue()),
            temperatura_ambiente,
            vazao
    );

    // Calcula a temperatura de saída com o coletor atualizado
    double tempSaida = novoColetor.calcularTemperaturaSaida();

    // Adiciona ruído aleatório à temperatura de entrada
    Random random = new Random();
    double ruido = (random.nextDouble() * 1.0) - 0.5; // Ruído entre -0.5 e 0.5
    temperatura_entrada = coletor.calcularTemperaturaEntrada(tempSaida) + ruido;

    // Atualiza o texto do rótulo da vazão
    label_vazao.setText(String.format("%.3f L/s", vazao));
    System.out.println("tempSaida: " + tempSaida);

    // Incrementa o contador de tempo e atualiza o gráfico
    t++;
    grafico.atualizarGrafico(tempSaida, temperatura_entrada, temperatura_ambiente);
}

/**
 * Método acionado ao clicar no botão para diminuir a vazão.
 * Reduz o valor da vazão em 0.001, garantindo que ela não fique abaixo de 0.001.
 * Atualiza a temperatura de saída após a mudança.
 * 
 * @param evt Evento gerado ao clicar no botão.
 */
    private void button_diminuir_vazaoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_diminuir_vazaoinActionPerformed
        vazao = vazao - 0.001;
        if (vazao <= 0) {
            vazao = 0.001;
        }

        atualizarTemperaturaSaida();
    }//GEN-LAST:event_button_diminuir_vazaoinActionPerformed
/**
 * Método acionado ao clicar no botão para aumentar a vazão.
 * Incrementa o valor da vazão em 0.01, garantindo que ela não fique abaixo de 0.
 * Atualiza a temperatura de saída após a mudança.
 * 
 * @param evt Evento gerado ao clicar no botão.
 */
    private void button_aumentar_vazaoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_aumentar_vazaoinActionPerformed
        // TODO add your handling code here:
        vazao = vazao + 0.01;
        if (vazao < 0) {
            vazao = 0;
        }
        atualizarTemperaturaSaida();
    }//GEN-LAST:event_button_aumentar_vazaoinActionPerformed
/**
 * Método acionado ao clicar no botão para diminuir a temperatura ambiente.
 * Reduz o valor da temperatura ambiente em 1 grau Celsius.
 * Atualiza a temperatura de saída após a mudança.
 * 
 * @param evt Evento gerado ao clicar no botão.
 */
    private void button_diminuir_temperatura_ambienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_diminuir_temperatura_ambienteActionPerformed
        // TODO add your handling code here:
        temperatura_ambiente = temperatura_ambiente - 1;
        atualizarTemperaturaSaida();
    }//GEN-LAST:event_button_diminuir_temperatura_ambienteActionPerformed
/**
 * Método acionado ao clicar no botão para aumentar a temperatura ambiente.
 * Incrementa o valor da temperatura ambiente em 1 grau Celsius.
 * Atualiza a temperatura de saída após a mudança.
 * 
 * @param evt Evento gerado ao clicar no botão.
 */
    private void button_aumentar_temperatura_ambienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_aumentar_temperatura_ambienteActionPerformed
        // TODO add your handling code here:
        temperatura_ambiente = temperatura_ambiente + 1;
        atualizarTemperaturaSaida();
    }//GEN-LAST:event_button_aumentar_temperatura_ambienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema_Solar_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema_Solar_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema_Solar_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema_Solar_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema_Solar_Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton button_aumentar_temperatura_ambiente;
    private javax.swing.JToggleButton button_aumentar_vazaoin;
    private javax.swing.JToggleButton button_diminuir_temperatura_ambiente;
    private javax.swing.JToggleButton button_diminuir_vazaoin;
    private javax.swing.ButtonGroup dia_tipo;
    private javax.swing.JSlider hora_dia;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_vazao;
    private javax.swing.JLabel valor_hora_dia;
    // End of variables declaration//GEN-END:variables
}
